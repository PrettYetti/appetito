<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<div class="row">
<div class="col-xs-4">
	<%= form_tag current_user.invites.find_by(event_id: @event.id), {method: :put, id: "add-location"} do %>
		<%= text_field_tag(:'invite[location]',value =nil, options={placeholder: "Insert location here."}) %> 
		<%= button_tag %>
	<% end %>
</div>

<a class="fs" href="#">Find Restaurant</a>
</div>

<div id="map" class="col-xs-6" style='min-height: 400px;'></div>

<script type="text/javascript">
	handler = Gmaps.build('Google');
	map = handler.buildMap({
	    provider: {
	      disableDefaultUI: true,
	      draggable: false,
	      // scrollwheel: false,
	      panControl: false
	      // pass in other Google Maps API options here
	    },
	    internal: {
	      id: 'map'
	    }
	  },
	  function(){
	  	json = <%=raw @hash.to_json %>
    	map = handler.map.serviceObject
	    markers = [];
	    searchMarkers = [];
	    bounds = new google.maps.LatLngBounds();
	    maxlat = maxlng = minlat = minlng = undefined
	    json.forEach(function (obj) {
	    	
	    	buildMarker(obj);
	    	setRadius(obj.lat, obj.lng);
	    });
	    // debugger
	    
	    map.fitBounds(calibrate(bounds));
	    window.radius = measure (maxlat, maxlng, minlat, minlng)/1.5
	    console.log(radius)

	    // window.radius = measure(bounds.Ea.k, bounds.va.k, bounds.Ea.j, bounds.va.j)
	    //put ajax call here and access yelp API in ruby to hide secret
	  }
	);
	function measure(lat1, lon1, lat2, lon2){  // generally used geo measurement function
	    var R = 6378.137; // Radius of earth in KM
	    var dLat = (lat2 - lat1) * Math.PI / 180;
	    var dLon = (lon2 - lon1) * Math.PI / 180;
	    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
	    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
	    Math.sin(dLon/2) * Math.sin(dLon/2);
	    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
	    var d = R * c;
	    return d * 1000; // meters
	}

	function calibrate(bounds) {
		var calibration =0.0007
		bounds.Ea.k -= calibration
		bounds.Ea.j += calibration
		bounds.va.j -= calibration
		bounds.va.k += calibration
		return bounds
	}



	function buildMarker(obj) {
		var myLatlng = new google.maps.LatLng(obj.lat, obj.lng)
		var contentString = obj.name
		var infowindow = new google.maps.InfoWindow({
			content: contentString
		})
		var marker =  new google.maps.Marker({
			position: myLatlng,
			map: handler.map.serviceObject,
			title: ""+obj.id
		})
		google.maps.event.addListener(marker, 'mouseover',function () {
			infowindow.open(map, marker);
		})

		google.maps.event.addListener(marker, 'mouseout', function () {
			infowindow.close();
		})
		bounds.extend(myLatlng)
		markers.push(marker)
	}

	function setRadius(lat,lng) {
		maxlat = Math.max(maxlat, lat) || lat
		minlat = Math.min(minlat, lat) || lat
		maxlng = Math.max(maxlng, lng) || lng
		minlng = Math.min(minlng, lng) || lng
	}

	function objectToMarker(object) {
		this.lat = object.latitude
		this.lng = object.longitude
		this.id = object.user_id
		this.name
	}
	
</script>